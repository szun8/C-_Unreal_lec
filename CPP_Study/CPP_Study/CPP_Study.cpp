#include <iostream>
using namespace std;

// 오늘의 주제 : 포인터 vs 배열

// 메모리상에서의 차이 
// 포인터 = 주소를 담는 바구니 생성 (8바이트(CPU크기) 만 생성)
// 배열 =  겉으로는 주소를 가리키지만 그냥 데이터만 담는 원격 영역 생성 (바구니 생성 X)(내가 정한 데이터만큼 메모리 생성)
void Test(int a) {
	a++;
}

// 배열은 함수 인자로 넘기면, 컴파일러가 알아서 포인터로 치환 (char[] -> char*)
// 즉 배열 내용의 전체를 넘긴게 아니라, 시작 주소(포인터)만 넘긴 것
void Test(char a[]) {
	a[0] = 'x';
}

int main()
{
	// .data 주소 [H][e][l][l][o][ ][W][o][r][l][d][\0]
	// test1[ 주소 ] << 8바이트 = 문자가 아무리 늘어나도 바구니의 크기는 변함 X
	const char* test1 = "Hello World";
	
	// test2 = 주소
	char test2[] = "Hello World";
	// [H][e][l][l][o][ ][W][o][r][l][d][\0]
	// test2 라는 별도의 바구니가 생성된게 아님
	// 배열은 [ 닭장 ] 즉, 그 자체로 같은 데이터 끼리 붙어있는 '바구니 모음'
	// - 다만 [배열 이름]은 '바구니 모음' 의 [시작 주소]

	// 배열을 함수의 인자로 넘기게 되면?
	int a = 0;
	Test(a);
	// a는 바구니이기에 값 만 복사해서 당연히 a는 바뀌지 않는다

	// test2가 바뀔까? -> 바뀐다!
	Test(test2);
	// 배열을 인자로 넘길때는,
	// 배열의 내부 데이터를 하나씩 복사해 넘기는것이 아닌,
	// 배열의 '시작 주소'만 매개변수로 넘김.
	cout << test2 << endl;

	return 0;
}